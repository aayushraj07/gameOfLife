{"ast":null,"code":"import _classCallCheck from \"/home/kingslayer/Code/JavaScript/React/Life of Game/gameoflife/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/kingslayer/Code/JavaScript/React/Life of Game/gameoflife/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/kingslayer/Code/JavaScript/React/Life of Game/gameoflife/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/kingslayer/Code/JavaScript/React/Life of Game/gameoflife/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/kingslayer/Code/JavaScript/React/Life of Game/gameoflife/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/kingslayer/Code/JavaScript/React/Life of Game/gameoflife/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nvar Box =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Box, _React$Component);\n\n  function Box() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Box);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Box)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.selectBox = function () {\n      _this.props.selectBox(_this.props.row, _this.props.col);\n    };\n\n    return _this;\n  }\n\n  _createClass(Box, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: this.props.boxClass,\n        id: this.props.id,\n        onClick: this.selectBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Box;\n}(React.Component);\n\nvar Grid =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Grid, _React$Component2);\n\n  function Grid() {\n    _classCallCheck(this, Grid);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Grid).apply(this, arguments));\n  }\n\n  _createClass(Grid, [{\n    key: \"render\",\n    value: function render() {\n      var width = this.props.cols * 16;\n      var rowsArr = [];\n      var boxClass = \"\";\n\n      for (var i = 0; i < this.props.rows; i++) {\n        for (var j = 0; j < this.props.cols; j++) {\n          var boxId = i + \"_\" + j;\n          boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box off\";\n          rowsArr.push(React.createElement(Box, {\n            boxClass: boxClass,\n            key: boxId,\n            boxId: boxId,\n            row: i,\n            col: j,\n            selectBox: this.props.selectBox,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }));\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"grid\",\n        style: {\n          width: width\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, rowsArr);\n    }\n  }]);\n\n  return Grid;\n}(React.Component);\n\nvar Main =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(Main, _React$Component3);\n\n  function Main() {\n    var _this2;\n\n    _classCallCheck(this, Main);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this));\n\n    _this2.selectBox = function (row, col) {\n      var gridCopy = arrayClone(_this2.state.gridFull);\n      gridCopy[row][col] = !gridCopy[row][col];\n\n      _this2.setState({\n        gridFull: gridCopy\n      });\n    };\n\n    _this2.seed = function () {\n      var gridCopy = arrayClone(_this2.state.gridFull);\n\n      for (var i = 0; i < _this2.rows; i++) {\n        for (var j = 0; j < _this2.cols; j++) {\n          if (Math.floor(Math.random() * 4) === 1) {\n            gridCopy[i][j] = true;\n          }\n        }\n      }\n\n      _this2.setState({\n        gridFull: gridCopy\n      });\n    };\n\n    _this2.playButton = function () {\n      clearInterval(_this2.intervalId);\n      _this2.intervalId = setInterval(_this2.play, _this2.speed);\n    };\n\n    _this2.pauseButton = function () {\n      clearInterval(_this2.intervalId);\n    };\n\n    _this2.play = function () {\n      var g = _this2.state.gridFull;\n      var g2 = arrayClone(_this2.state.gridFull);\n\n      for (var i = 0; i < _this2.rows; i++) {\n        for (var j = 0; j < _this2.cols; j++) {\n          var count = 0;\n          if (i > 0) if (g[i - 1][j]) count++;\n          if (i > 0 && j > 0) if (g[i - 1][j - 1]) count++;\n          if (i > 0 && j < _this2.cols - 1) if (g[i - 1][j + 1]) count++;\n          if (j < _this2.cols - 1) if (g[i][j + 1]) count++;\n          if (j > 0) if (g[i][j - 1]) count++;\n          if (i < _this2.rows - 1) if (g[i + 1][j]) count++;\n          if (i < _this2.rows - 1 && j > 0) if (g[i + 1][j - 1]) count++;\n          if (i < _this2.rows - 1 && j < _this2.cols - 1) if (g[i + 1][j + 1]) count++;\n          if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false;\n          if (!g[i][j] && count === 3) g2[i][j] = true;\n        }\n      }\n\n      _this2.setState({\n        gridFull: g2,\n        generation: _this2.state.generation + 1\n      });\n    };\n\n    _this2.speed = 100;\n    _this2.rows = 30;\n    _this2.cols = 50;\n    _this2.state = {\n      generation: 0,\n      gridFull: Array(_this2.rows).fill().map(function () {\n        return Array(_this2.cols).fill(false);\n      })\n    };\n    return _this2;\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.seed();\n      this.playButton();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"The Game Of Life\"), React.createElement(Grid, {\n        gridFull: this.state.gridFull,\n        rows: this.rows,\n        cols: this.cols,\n        selectBox: this.selectBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Generation:\", this.state.generation));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nfunction arrayClone(arr) {\n  return JSON.parse(JSON.stringify(arr));\n}\n\nReactDOM.render(React.createElement(Main, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 152\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/kingslayer/Code/JavaScript/React/Life of Game/gameoflife/src/index.js"],"names":["React","ReactDOM","Box","selectBox","props","row","col","boxClass","id","Component","Grid","width","cols","rowsArr","i","rows","j","boxId","gridFull","push","Main","gridCopy","arrayClone","state","setState","seed","Math","floor","random","playButton","clearInterval","intervalId","setInterval","play","speed","pauseButton","g","g2","count","generation","Array","fill","map","arr","JSON","parse","stringify","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nclass Box extends React.Component {\n  selectBox = () => {\n    this.props.selectBox(this.props.row, this.props.col);\n  };\n  render() {\n    return (\n      <div\n        className={this.props.boxClass}\n        id={this.props.id}\n        onClick={this.selectBox}\n      />\n    );\n  }\n}\n\nclass Grid extends React.Component {\n  render() {\n    const width = this.props.cols * 16;\n    var rowsArr = [];\n\n    var boxClass = \"\";\n    for (var i = 0; i < this.props.rows; i++) {\n      for (var j = 0; j < this.props.cols; j++) {\n        let boxId = i + \"_\" + j;\n\n        boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box off\";\n        rowsArr.push(\n          <Box\n            boxClass={boxClass}\n            key={boxId}\n            boxId={boxId}\n            row={i}\n            col={j}\n            selectBox={this.props.selectBox}\n          />\n        );\n      }\n    }\n\n    return (\n      <div className=\"grid\" style={{ width: width }}>\n        {rowsArr}\n      </div>\n    );\n  }\n}\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n    this.speed = 100;\n    this.rows = 30;\n    this.cols = 50;\n\n    this.state = {\n      generation: 0,\n      gridFull: Array(this.rows)\n        .fill()\n        .map(() => Array(this.cols).fill(false))\n    };\n  }\n\n  selectBox = (row, col) => {\n    let gridCopy = arrayClone(this.state.gridFull);\n    gridCopy[row][col] = !gridCopy[row][col];\n    this.setState({\n      gridFull: gridCopy\n    });\n  };\n\n  seed = () => {\n    let gridCopy = arrayClone(this.state.gridFull);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        if (Math.floor(Math.random() * 4) === 1) {\n          gridCopy[i][j] = true;\n        }\n      }\n    }\n    this.setState({\n      gridFull: gridCopy\n    });\n  };\n\n  playButton = () => {\n    clearInterval(this.intervalId);\n    this.intervalId = setInterval(this.play, this.speed);\n  };\n\n  pauseButton = () => {\n    clearInterval(this.intervalId);\n  };\n\n  play = () => {\n    let g = this.state.gridFull;\n    let g2 = arrayClone(this.state.gridFull);\n\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        let count = 0;\n        if (i > 0) if (g[i - 1][j]) count++;\n        if (i > 0 && j > 0) if (g[i - 1][j - 1]) count++;\n        if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) count++;\n        if (j < this.cols - 1) if (g[i][j + 1]) count++;\n        if (j > 0) if (g[i][j - 1]) count++;\n        if (i < this.rows - 1) if (g[i + 1][j]) count++;\n        if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) count++;\n        if (i < this.rows - 1 && j < this.cols - 1)\n          if (g[i + 1][j + 1]) count++;\n        if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false;\n        if (!g[i][j] && count === 3) g2[i][j] = true;\n      }\n    }\n    this.setState({\n      gridFull: g2,\n      generation: this.state.generation + 1\n    });\n  };\n\n  componentDidMount() {\n    this.seed();\n    this.playButton();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>The Game Of Life</h1>\n        <Grid\n          gridFull={this.state.gridFull}\n          rows={this.rows}\n          cols={this.cols}\n          selectBox={this.selectBox}\n        />\n        <h2>\n          Generation:\n          {this.state.generation}\n        </h2>\n      </div>\n    );\n  }\n}\n\nfunction arrayClone(arr) {\n  return JSON.parse(JSON.stringify(arr));\n}\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}